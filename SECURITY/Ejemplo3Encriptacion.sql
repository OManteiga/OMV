

USE MASTER
GO

-- CREAMOS LOS 2 LOGINS 

CREATE LOGIN doctor1 WITH password = 'Abcd1234.'
GO
CREATE LOGIN doctor2 WITH password = 'Abcd1234.'
GO

--CREAMOS LA BASE DE DATOS

DROP DATABASE IF EXISTS hospitaldb
GO

CREATE DATABASE hospitaldb
GO

USE hospitaldb
GO


--CREAMOS LOS USUARIOS PARA LOS LOGIN QUE CREAMOS ANTES

DROP USER IF EXISTS doctor1
GO
DROP USER IF EXISTS doctor2
GO

CREATE USER doctor1 FOR LOGIN doctor1
GO

CREATE USER doctor2 FOR LOGIN doctor2
GO


--CREAMOS LA TABLA

DROP TABLE IF EXISTS DatosPacientes
GO

CREATE TABLE DatosPacientes
(
	id				INT,
	name			NVARCHAR(30),
	doctorname		VARCHAR(25),
	uid				VARBINARY(1000),
	symptom			VARBINARY(4000),
)
GO


--CONCEDEMOS PERMISOS A LOS DOCTORES SOBRE LAS TABLAS DatosPacientes

GRANT SELECT, INSERT ON DatosPacientes TO doctor1
GO
GRANT SELECT, INSERT ON DatosPacientes TO doctor2
GO


--CREAMOS LA MASTER KEY

DROP MASTER KEY
GO
CREATE MASTER KEY encryption BY PASSWORD = 'Abcd1234.'
GO

SELECT name KeyName,
	symmetric_key_id KeyID,
	key_length KeyLength,
	algorithm_desc KeyAlgoritm
FROM sys.symmetric_keys
GO

--CREAMOS LOS CERTIFICADOS CON FECHA

CREATE CERTIFICATE doctor1cert AUTHORIZATION doctor1
WITH subject = 'Abcd1234.' ,start_date = '01/01/2023'
GO

CREATE CERTIFICATE doctor2cert AUTHORIZATION doctor2
WITH subject = 'Abcd1234.' ,start_date = '01/01/2023'
GO

--VEMOS LOS CERTIFICADOS


SELECT name Certname,
	certificate_id CertID,
	pvt_key_enCryption_type_desc EncrypType,
	issuer_name Issuer
FROM sys.certificates
GO

--CREAMOS LAS CLAVES SYMETRICAS CON EL ALGORITMO AES Y ENCTIPTADAS CON EL CERTIFICADO CREADO ANTES


CREATE SYMMETRIC KEY doctor1key
WITH ALGORITHM = AES_256
ENCRYPTION BY CERTIFICATE doctor1cert
GO


CREATE SYMMETRIC KEY doctor2key
WITH ALGORITHM = AES_256
ENCRYPTION BY CERTIFICATE doctor2cert
GO

--CONSULTAMOS

SELECT name KeyName,
	symmetric_key_id KeyID,
	key_length KeyLength,
	algorithm_desc KeyAlgoritm
FROM sys.symmetric_keys
GO

--##MS_DatabaseMasterKey##	101	256					AES_256
--doctor2key					256	256					AES_256
--doctor1key					257	256					AES_256




--EL TRIPLE DES ESTA DESCATALOGADO PARA SQL SERVER



--CONCEDEMOS EL PERMISO DEL VIEW A LOS CERTIFICADOS DE LOS DOCTORES

GRANT VIEW DEFINITION ON CERTIFICATE::doctor1cert  TO  doctor1
GO

GRANT VIEW DEFINITION ON SYMMETRIC KEY ::doctor1key  TO  doctor1
GO


GRANT VIEW DEFINITION ON CERTIFICATE::doctor2cert  TO  doctor2
GO

GRANT VIEW DEFINITION ON SYMMETRIC KEY ::doctor2key  TO  doctor2
GO



--IMPERSONAMOS



EXECUTE AS User = 'doctor1'
PRINT USER
GO
OPEN SYMMETRIC KEY doctor1key
	DECRYPTION by CERTIFICATE doctor1cert
GO

SELECT * 
FROM sys.openkeys
GO

--21	hospitaldb	257	doctor1key	6E489D00-B0AE-4610-AC62-2024AC5541F4	2023-02-06 21:15:57.333	1





--INSERTAMOS DATOS EN LA TABLA DE LOS PACIENTES


INSERT INTO DatosPacientes
VALUES  (1,
	'Jose',
	'Doctor1',
	Encryptbykey(Key_guid('Doctor1key'),  '1111111'),
	Encryptbykey(Key_guid('Doctor1key'),  'Corte'))
GO


	INSERT INTO DatosPacientes
VALUES  (2,
	'Pepe',
	'Doctor1',
	Encryptbykey(Key_guid('Doctor1key'),  '2222222'),
	Encryptbykey(Key_guid('Doctor1key'),  'Quemadura'))
GO

	INSERT INTO DatosPacientes
VALUES  (3,
	'Alex',
	'Doctor1',
	Encryptbykey(Key_guid('Doctor1key'),  '3333333'),
	Encryptbykey(Key_guid('Doctor1key'),  'Dolor de cabeza'))
GO

--COMPROBAMOS QUE ENCRIPTA

SELECT * FROM DatosPacientes
GO

--1	Jose	Doctor1	0x009D486EAEB01046AC622024AC5541F402000000938715E2C125878E2ECDFE494EADABA9B8EF0565986F4222207254E96FA8DD40	0x009D486EAEB01046AC622024AC5541F402000000A5DCE41E8756D36F9ED72C618252AFB5E613FBD67795F680B56DB09F77E44A3E
--2	Pepe	Doctor1	0x009D486EAEB01046AC622024AC5541F402000000F30CF801CCB80ACBC7603E8A18E62E7072960511D2551B26505D6ED5CD0E1FA6	0x009D486EAEB01046AC622024AC5541F40200000019A3224FDA6CE5CE7301DA4D1E2650FB28A189304F27A05D97B17D25C09C195A32152FB423538CB61F67A9D9ECADD740
--3	Alex	Doctor1	0x009D486EAEB01046AC622024AC5541F402000000C59A7BE6B7163798B6D13465D888283E4AE492494DB7C39A7DDCB8E78E345131	0x009D486EAEB01046AC622024AC5541F402000000EA6C2BE879E6F3D5165B9C1BE1F8E7ACF38060986A482332955A1E96B940E0F7FAF51DFD4AD273ADB46A166FA7ACA738



--CERRAMOS LAS CLAVES SIMETRICAS Y SALIMOS DE LA IMPERSONACION


CLOSE ALL symmetric keys
GO 
REVERT 
GO




--DOCTOR 2 

EXECUTE AS User = 'doctor2'
PRINT USER
GO
OPEN SYMMETRIC KEY doctor2key
	DECRYPTION by CERTIFICATE doctor2cert
GO


SELECT * 
FROM sys.openkeys
GO

--21	hospitaldb	257	doctor1key	6E489D00-B0AE-4610-AC62-2024AC5541F4	2023-02-06 21:15:57.333	1





--INSERTAMOS DATOS EN LA TABLA DE LOS PACIENTES


INSERT INTO DatosPacientes
VALUES  (1,
	'Oli',
	'Doctor2',
	Encryptbykey(Key_guid('Doctor2key'),  '4444444'),
	Encryptbykey(Key_guid('Doctor2key'),  'Diarrea'))
GO


	INSERT INTO DatosPacientes
VALUES  (2,
	'Ricardo',
	'Doctor2',
	Encryptbykey(Key_guid('Doctor2key'),  '55555555'),
	Encryptbykey(Key_guid('Doctor2key'),  'Hueso roto'))
GO

	INSERT INTO DatosPacientes
VALUES  (3,
	'Daniel',
	'Doctor2',
	Encryptbykey(Key_guid('Doctor2key'),  '6666666'),
	Encryptbykey(Key_guid('Doctor2key'),  'Cancer'))
GO

--COMPROBAMOS QUE ENCRIPTA

SELECT * FROM DatosPacientes
GO


--Oli	Doctor2	0x0010106489806441819B51D0BFC650E6020000006A73D837A4936904F4388DB6F4EFA70A39A0D0C912FB391C37ED46BD9F91C99D	0x0010106489806441819B51D0BFC650E6020000003831F39DDA9A33F2D85233A8955DB062478204A10328C78A37CD43B993CF93EB
--Ricardo	Doctor2	0x0010106489806441819B51D0BFC650E60200000082D1979BDA559FB447E5F240ADD0DD8B554D10778F7FBA70C1C7A52A86A775BAD4E0B3E27922F33E075245B6FA42A752	0x0010106489806441819B51D0BFC650E6020000004DC700CF66FFB157CC940A7C899647E4744E01C3165E4FF7B945BBED7146B531893383CC09F98E18272123212A8D8A98
--Daniel	Doctor2	0x0010106489806441819B51D0BFC650E602000000D29877470A21CEEF98D77283FAB392B41603B42A02D9B6ECB206D5695DBDD47B	0x0010106489806441819B51D0BFC650E602000000009C4EC5FE4043745F9B84120014FC267D7D4E19024CDA4B9082FB7A107E714D


--CERRAMOS LA CLAVE Y HACEMOS REVERT PARA SER DBO OTRA VEZ

CLOSE ALL symmetric keys
GO 
REVERT 
GO

--HACEMOS LA SELECT CON DBO Y NO VEMOS NADA


SELECT  * FROM DatosPacientes
GO







--IMPERSONAMOS Y VEMOS QUE EL DOCTOR 1 SOLO PUEDE VER A SUS PACIENTES


EXECUTE AS User = 'doctor1'
PRINT USER
GO
OPEN SYMMETRIC KEY doctor1key
	DECRYPTION by CERTIFICATE doctor1cert
GO

SELECT ID,
doctorname,
CONVERT (VARCHAR,Decryptbykey(uid))		AS UID,
CONVERT (VARCHAR,Decryptbykey(symptom))		AS Sintomas
FROM DatosPacientes
GO


--1	Doctor1	1111111	Corte
--2	Doctor1	2222222	Quemadura
--3	Doctor1	3333333	Dolor de cabeza
--1	Doctor2	NULL	NULL
--2	Doctor2	NULL	NULL
--3	Doctor2	NULL	NULL


-------CERRAMOS LAS CLAVES E IMPERSONAMOS AL DOCTOR 2 PARA VER QUE  SOLO SE VEN SUS PACIENTES

CLOSE ALL symmetric keys
GO 
REVERT 
GO


EXECUTE AS User = 'doctor2'
PRINT USER
GO
OPEN SYMMETRIC KEY doctor2key
	DECRYPTION by CERTIFICATE doctor2cert
GO

SELECT ID,
doctorname,
CONVERT (VARCHAR,Decryptbykey(uid))		AS UID,
CONVERT (VARCHAR,Decryptbykey(symptom))		AS Sintomas
FROM DatosPacientes
GO


--CERRAMOS LA CLAVE Y REVERT PARA SER OTRA VEZ DBO



CLOSE ALL symmetric keys
GO 
REVERT 
GO




----PARA BORRA LA MASTER KEY  HAY QUE BORRAR LOS CERTIFICADOS
